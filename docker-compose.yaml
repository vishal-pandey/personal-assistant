version: '3.9'

services:
  chat:
    build:
      context: ./chat
    ports:
      - "8000:8000"
    container_name: chat_app
    depends_on:
      - n8n

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    container_name: n8n_app
    volumes:
      - ./n8n_data:/home/node/.n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_ENABLE_CREDENTIALS_FEATURES=true
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=postgres
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=postgres
      - MS_CLIENT_SECRET=<client-secret>
      - LLM_KEY=<your-chatgpt-token>
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      n8n import:workflow --input=/home/node/.n8n/data/workflows.json &&
      n8n import:credentials --input=/home/node/.n8n/data/credentials.json &&
      n8n update:workflow --all --active=true &&
      n8n start
      "

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
